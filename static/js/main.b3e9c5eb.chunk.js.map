{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","state","output","calcStr","self","map","v","bind","addEventListener","this","keyEvt","removeEventListener","e","val","key","test","addToStr","calculatevalue","delete","lastChr","length","slice","setState","eval","btns","value","label","class","click","clearValue","i","className","onClick","Component"],"mappings":"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","file":"static/js/main.b3e9c5eb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\toutput: '0',\r\n\t\t\tcalcStr: '',\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\t[\r\n\t\t\t'addToStr',\r\n\t\t\t'clearValue',\r\n\t\t\t'delete',\r\n\t\t\t'calculatevalue',\r\n\t\t\t'keyEvt',\r\n\t\t].map((v) => {\r\n\t\t\tself[v] = self[v].bind(self);\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keydown\", this.keyEvt, false);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.keyEvt, false);\r\n\t}\r\n\r\n\tkeyEvt(e) {\r\n\t\tconst val = e.key;\r\n\t\tif (/[-+*.\\/]|[0-9]/.test(val)) {\r\n\t\t\tthis.addToStr(val);\r\n\t\t}\r\n\t\tif (val === 'Enter') {\r\n\t\t\tthis.calculatevalue();\r\n\t\t}\r\n\t\tif (val === 'Backspace') {\r\n\t\t\tthis.delete();\r\n\t\t}\r\n\t}\r\n\r\n\taddToStr(val) {\r\n\t\tvar { calcStr } = this.state;\r\n\t\tvar lastChr = calcStr[calcStr.length - 1];\r\n\t\tif (calcStr.length < 1) {\r\n\t\t\tif (/[*\\/]/.test(val)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (/[-+*.\\/]/.test(val) && /[-+*.\\/]/.test(lastChr)) {\r\n\t\t\tcalcStr = calcStr.slice(0, -1);\r\n\t\t}\r\n\t\tthis.setState({ calcStr: calcStr + val });\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tvar { calcStr } = this.state;\r\n\t\tthis.setState({ calcStr: calcStr.slice(0, -1) });\r\n\t}\r\n\r\n\tclearValue() {\r\n\t\tthis.setState({ output: '0', calcStr: '' });\r\n\t}\r\n\r\n\tcalculatevalue() {\r\n\t\tvar { calcStr } = this.state;\r\n\t\tvar lastChr = calcStr[calcStr.length - 1];\r\n\t\tif (/[-+*.\\/]/.test(lastChr)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({ output: eval(calcStr) });\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { output, calcStr } = this.state;\r\n\r\n\t\tvar btnArr = [\r\n\t\t\t{ value: 'C', label: 'C', class: '', click: this.clearValue },\r\n\t\t\t{ value: '←', label: '←', class: '', click: this.delete },\r\n\t\t\t{ value: '/', label: '/', class: '', click: this.addToStr },\r\n\t\t\t{ value: '*', label: '*', class: '', click: this.addToStr },\r\n\t\t\t{ value: '7', label: '7', class: '', click: this.addToStr },\r\n\t\t\t{ value: '8', label: '8', class: '', click: this.addToStr },\r\n\t\t\t{ value: '9', label: '9', class: '', click: this.addToStr },\r\n\t\t\t{ value: '-', label: '-', class: '', click: this.addToStr },\r\n\t\t\t{ value: '4', label: '4', class: '', click: this.addToStr },\r\n\t\t\t{ value: '5', label: '5', class: '', click: this.addToStr },\r\n\t\t\t{ value: '6', label: '6', class: '', click: this.addToStr },\r\n\t\t\t{ value: '+', label: '+', class: '', click: this.addToStr },\r\n\t\t\t{ value: '1', label: '1', class: '', click: this.addToStr },\r\n\t\t\t{ value: '2', label: '2', class: '', click: this.addToStr },\r\n\t\t\t{ value: '3', label: '3', class: '', click: this.addToStr },\r\n\t\t\t{ value: '=', label: '=', class: 'grid2xrow', click: this.calculatevalue },\r\n\t\t\t{ value: '0', label: '0', class: 'grid2xcol', click: this.addToStr },\r\n\t\t\t{ value: '.', label: '.', class: '', click: this.addToStr },\r\n\t\t];\r\n\t\tvar btns = btnArr.map((val, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<button key={`${val}${i}`} className={`${val.class} inputBtn`} onClick={() => { val.click(val.value) }}>\r\n\t\t\t\t\t{val.label}\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className='calc-box container p-2'>\r\n\t\t\t\t<div className='outputBox mb-1'>\r\n\t\t\t\t\t<div className='formula'>\r\n\t\t\t\t\t\t{calcStr}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='result'>\r\n\t\t\t\t\t\t{output}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='calc-grid'>\r\n\t\t\t\t\t{btns}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}